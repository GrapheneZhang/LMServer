<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lm.busi.dao.SubjectMapper">

	<resultMap id="BaseResultMap" type="Subject">
		<id column="id" property="id" jdbcType="SMALLINT" />
		<result column="en_name" property="enName" jdbcType="VARCHAR" />
		<result column="zh_name" property="zhName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, en_name, zh_name
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Short">
		select
		<include refid="Base_Column_List" />
		from lm_subject
		where id = #{id,jdbcType=SMALLINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Short">
		delete from lm_subject
		where id = #{id,jdbcType=SMALLINT}
	</delete>
	<insert id="insert" parameterType="Subject">
		insert into lm_subject (en_name, zh_name
		)
		values (#{enName,jdbcType=VARCHAR},
		#{zhName,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="Subject">
		insert into lm_subject
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="enName != null">
				en_name,
			</if>
			<if test="zhName != null">
				zh_name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=SMALLINT},
			</if>
			<if test="enName != null">
				#{enName,jdbcType=VARCHAR},
			</if>
			<if test="zhName != null">
				#{zhName,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="Subject">
		update lm_subject
		<set>
			<if test="enName != null">
				en_name = #{enName,jdbcType=VARCHAR},
			</if>
			<if test="zhName != null">
				zh_name = #{zhName,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=SMALLINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="Subject">
		update lm_subject
		set en_name = #{enName,jdbcType=VARCHAR},
		zh_name = #{zhName,jdbcType=VARCHAR}
		where id = #{id,jdbcType=SMALLINT}
	</update>
	
	<!-- 删除s -->
    <delete id="deleteByPrimaryKeys" parameterType="map">
        delete from lm_subject where id in 
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id,jdbcType=INTEGER}
        </foreach>
    </delete>
	
    <select id="listModelsByModel" parameterType="Subject" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from lm_subject 
        <where>
            <if test="fuzzyWord!=null">
                and (en_name like "%"#{fuzzyWord}"%"
                    or zh_name like "%"#{fuzzyWord}"%")
            </if>
        </where>
    </select>
    
    <select id="listModelsByMap" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from lm_subject 
        <where>
            <if test="fuzzyWord!=null">
                and (en_name like "%"#{fuzzyWord}"%"
                    or zh_name like "%"#{fuzzyWord}"%")
            </if>
        </where>
    </select>
    
    <select id="listMapsByModel" parameterType="Subject" resultType="map">
       select ${columns_select} from lm_subject s
       <where>
           
       </where>
    </select>
    
    <!-- 获取传入的一些列来list -->
    <select id="listMapsByMap" parameterType="map" resultType="map">
        select ${columns_select} from lm_subject s
        <if test="userId != null">
            inner join lm_user_subject us on s.id=us.subject_id 
            and us.user_id = #{userId}
        </if>
        <where>
            <if test="fuzzyWord!=null">
                and (en_name like "%"#{fuzzyWord}"%"
                    or zh_name like "%"#{fuzzyWord}"%")
            </if>
        </where>
    </select>
    
    <!-- 根据传入某个参数，来计数 -->
    <select id="countSelectedProperty" parameterType="Subject" resultType="java.lang.Integer">
       select count(*) from lm_subject s 
       <where>
           <if test="enName != null">
               and s.en_name = #{enName,jdbcType=VARCHAR}
           </if>
           <if test="zhName != null">
               and s.zh_name = #{zhName,jdbcType=VARCHAR}
           </if>
       </where>
    </select>
</mapper>